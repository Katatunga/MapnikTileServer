# Generated by Django 3.0.3 on 2020-02-26 05:26

import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields.hstore
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='OhdmClassification',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('class_field', models.CharField(blank=True, db_column='class', max_length=255, null=True)),
                ('subclassname', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'classification',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OhdmContent',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('value', models.BinaryField()),
                ('mimetype', models.CharField(blank=True, max_length=255, null=True)),
                ('source_user_id', models.BigIntegerField()),
            ],
            options={
                'db_table': 'content',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OhdmExternalSystems',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'external_systems',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OhdmExternalUsers',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('userid', models.BigIntegerField(blank=True, null=True)),
                ('username', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'external_users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OhdmGeoobject',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('source_user_id', models.BigIntegerField()),
            ],
            options={
                'db_table': 'geoobject',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OhdmGeoobjectContent',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('valid_since', models.DateField()),
                ('valid_until', models.DateField()),
                ('valid_since_offset', models.BigIntegerField(blank=True, null=True)),
                ('valid_until_offset', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'geoobject_content',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OhdmGeoobjectGeometry',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('id_target', models.BigIntegerField(blank=True, null=True)),
                ('type_target', models.IntegerField(blank=True, choices=[(0, 'Point 0'), (1, 'Point 1'), (2, 'Line'), (3, 'Polygon')], null=True)),
                ('role', models.CharField(blank=True, max_length=255, null=True)),
                ('tags', django.contrib.postgres.fields.hstore.HStoreField(blank=True, null=True)),
                ('valid_since', models.DateField()),
                ('valid_until', models.DateField()),
                ('valid_since_offset', models.BigIntegerField(blank=True, null=True)),
                ('valid_until_offset', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'geoobject_geometry',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OhdmGeoobjectUrl',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('geoobject_id', models.BigIntegerField()),
                ('url_id', models.BigIntegerField()),
                ('valid_since', models.DateField()),
                ('valid_until', models.DateField()),
                ('valid_since_offset', models.BigIntegerField(blank=True, null=True)),
                ('valid_until_offset', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'geoobject_url',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OhdmImportUpdates',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('externalsystemid', models.BigIntegerField(blank=True, null=True)),
                ('initial', models.DateField(blank=True, null=True)),
                ('lastupdate', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'import_updates',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OhdmLines',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('line', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=0)),
            ],
            options={
                'db_table': 'lines',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OhdmPoints',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('point', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=0)),
            ],
            options={
                'db_table': 'points',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OhdmPolygons',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('polygon', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=0)),
            ],
            options={
                'db_table': 'polygons',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OhdmSubsequentGeomUser',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'subsequent_geom_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OhdmTopology',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('srid', models.IntegerField()),
                ('precision', models.FloatField()),
                ('hasz', models.BooleanField()),
            ],
            options={
                'db_table': 'topology',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OhdmUrl',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
                ('source_user_id', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'url',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TileCache',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('zoom', models.IntegerField()),
                ('x_pixel', models.FloatField()),
                ('y_pixel', models.FloatField()),
                ('valid_since', models.DateField(null=True)),
                ('valid_until', models.DateField(null=True)),
                ('celery_task_id', models.CharField(blank=True, max_length=256)),
                ('celery_task_done', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='OhdmLayer',
            fields=[
                ('topology', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='ohdm.OhdmTopology')),
                ('layer_id', models.IntegerField()),
                ('schema_name', models.CharField(max_length=255)),
                ('table_name', models.CharField(max_length=255)),
                ('feature_column', models.CharField(max_length=255)),
                ('feature_type', models.IntegerField()),
                ('level', models.IntegerField()),
                ('child_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'layer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlanetOsmRoads',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('osm_id', models.BigIntegerField(blank=True, null=True)),
                ('access', models.TextField(blank=True, null=True)),
                ('addr_housename', models.TextField(blank=True, db_column='addr:housename', null=True)),
                ('addr_housenumber', models.TextField(blank=True, db_column='addr:housenumber', null=True)),
                ('addr_interpolation', models.TextField(blank=True, db_column='addr:interpolation', null=True)),
                ('admin_level', models.TextField(blank=True, null=True)),
                ('aerialway', models.TextField(blank=True, null=True)),
                ('aeroway', models.TextField(blank=True, null=True)),
                ('amenity', models.TextField(blank=True, null=True)),
                ('barrier', models.TextField(blank=True, null=True)),
                ('bicycle', models.TextField(blank=True, null=True)),
                ('bridge', models.TextField(blank=True, null=True)),
                ('boundary', models.TextField(blank=True, null=True)),
                ('building', models.TextField(blank=True, null=True)),
                ('construction', models.TextField(blank=True, null=True)),
                ('covered', models.TextField(blank=True, null=True)),
                ('foot', models.TextField(blank=True, null=True)),
                ('highway', models.TextField(blank=True, null=True)),
                ('historic', models.TextField(blank=True, null=True)),
                ('horse', models.TextField(blank=True, null=True)),
                ('junction', models.TextField(blank=True, null=True)),
                ('landuse', models.TextField(blank=True, null=True)),
                ('layer', models.IntegerField(blank=True, null=True)),
                ('leisure', models.TextField(blank=True, null=True)),
                ('lock', models.TextField(blank=True, null=True)),
                ('man_made', models.TextField(blank=True, null=True)),
                ('military', models.TextField(blank=True, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('natural', models.TextField(blank=True, null=True)),
                ('oneway', models.TextField(blank=True, null=True)),
                ('place', models.TextField(blank=True, null=True)),
                ('power', models.TextField(blank=True, null=True)),
                ('railway', models.TextField(blank=True, null=True)),
                ('ref', models.TextField(blank=True, null=True)),
                ('religion', models.TextField(blank=True, null=True)),
                ('route', models.TextField(blank=True, null=True)),
                ('service', models.TextField(blank=True, null=True)),
                ('shop', models.TextField(blank=True, null=True)),
                ('surface', models.TextField(blank=True, null=True)),
                ('tourism', models.TextField(blank=True, null=True)),
                ('tracktype', models.TextField(blank=True, null=True)),
                ('tunnel', models.TextField(blank=True, null=True)),
                ('water', models.TextField(blank=True, null=True)),
                ('waterway', models.TextField(blank=True, null=True)),
                ('way_area', models.FloatField(blank=True, null=True)),
                ('z_order', models.IntegerField(blank=True, null=True)),
                ('tags', models.TextField(blank=True, null=True)),
                ('way', django.contrib.gis.db.models.fields.LineStringField(blank=True, null=True, srid=3857)),
                ('valid_since', models.DateField(blank=True, null=True)),
                ('valid_until', models.DateField(blank=True, null=True)),
                ('geoobject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ohdm.OhdmGeoobject')),
            ],
            options={
                'db_table': 'planet_osm_roads',
            },
        ),
        migrations.CreateModel(
            name='PlanetOsmPolygon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('osm_id', models.BigIntegerField(blank=True, null=True)),
                ('access', models.TextField(blank=True, null=True)),
                ('addr_housename', models.TextField(blank=True, db_column='addr:housename', null=True)),
                ('addr_housenumber', models.TextField(blank=True, db_column='addr:housenumber', null=True)),
                ('addr_interpolation', models.TextField(blank=True, db_column='addr:interpolation', null=True)),
                ('admin_level', models.TextField(blank=True, null=True)),
                ('aerialway', models.TextField(blank=True, null=True)),
                ('aeroway', models.TextField(blank=True, null=True)),
                ('amenity', models.TextField(blank=True, null=True)),
                ('barrier', models.TextField(blank=True, null=True)),
                ('bicycle', models.TextField(blank=True, null=True)),
                ('bridge', models.TextField(blank=True, null=True)),
                ('boundary', models.TextField(blank=True, null=True)),
                ('building', models.TextField(blank=True, null=True)),
                ('construction', models.TextField(blank=True, null=True)),
                ('covered', models.TextField(blank=True, null=True)),
                ('foot', models.TextField(blank=True, null=True)),
                ('highway', models.TextField(blank=True, null=True)),
                ('historic', models.TextField(blank=True, null=True)),
                ('horse', models.TextField(blank=True, null=True)),
                ('junction', models.TextField(blank=True, null=True)),
                ('landuse', models.TextField(blank=True, null=True)),
                ('layer', models.IntegerField(blank=True, null=True)),
                ('leisure', models.TextField(blank=True, null=True)),
                ('lock', models.TextField(blank=True, null=True)),
                ('man_made', models.TextField(blank=True, null=True)),
                ('military', models.TextField(blank=True, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('natural', models.TextField(blank=True, null=True)),
                ('oneway', models.TextField(blank=True, null=True)),
                ('place', models.TextField(blank=True, null=True)),
                ('power', models.TextField(blank=True, null=True)),
                ('railway', models.TextField(blank=True, null=True)),
                ('ref', models.TextField(blank=True, null=True)),
                ('religion', models.TextField(blank=True, null=True)),
                ('route', models.TextField(blank=True, null=True)),
                ('service', models.TextField(blank=True, null=True)),
                ('shop', models.TextField(blank=True, null=True)),
                ('surface', models.TextField(blank=True, null=True)),
                ('tourism', models.TextField(blank=True, null=True)),
                ('tracktype', models.TextField(blank=True, null=True)),
                ('tunnel', models.TextField(blank=True, null=True)),
                ('water', models.TextField(blank=True, null=True)),
                ('waterway', models.TextField(blank=True, null=True)),
                ('way_area', models.FloatField(blank=True, null=True)),
                ('z_order', models.IntegerField(blank=True, null=True)),
                ('tags', django.contrib.postgres.fields.hstore.HStoreField(blank=True, null=True)),
                ('way', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=3857)),
                ('valid_since', models.DateField(blank=True, null=True)),
                ('valid_until', models.DateField(blank=True, null=True)),
                ('geoobject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ohdm.OhdmGeoobject')),
            ],
            options={
                'db_table': 'planet_osm_polygon',
            },
        ),
        migrations.CreateModel(
            name='PlanetOsmPoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('osm_id', models.BigIntegerField(blank=True, null=True)),
                ('access', models.TextField(blank=True, null=True)),
                ('addr_housename', models.TextField(blank=True, db_column='addr:housename', null=True)),
                ('addr_housenumber', models.TextField(blank=True, db_column='addr:housenumber', null=True)),
                ('admin_level', models.TextField(blank=True, null=True)),
                ('aerialway', models.TextField(blank=True, null=True)),
                ('aeroway', models.TextField(blank=True, null=True)),
                ('amenity', models.TextField(blank=True, null=True)),
                ('barrier', models.TextField(blank=True, null=True)),
                ('boundary', models.TextField(blank=True, null=True)),
                ('building', models.TextField(blank=True, null=True)),
                ('highway', models.TextField(blank=True, null=True)),
                ('historic', models.TextField(blank=True, null=True)),
                ('junction', models.TextField(blank=True, null=True)),
                ('landuse', models.TextField(blank=True, null=True)),
                ('layer', models.IntegerField(blank=True, null=True)),
                ('leisure', models.TextField(blank=True, null=True)),
                ('lock', models.TextField(blank=True, null=True)),
                ('man_made', models.TextField(blank=True, null=True)),
                ('military', models.TextField(blank=True, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('natural', models.TextField(blank=True, null=True)),
                ('oneway', models.TextField(blank=True, null=True)),
                ('place', models.TextField(blank=True, null=True)),
                ('power', models.TextField(blank=True, null=True)),
                ('railway', models.TextField(blank=True, null=True)),
                ('ref', models.TextField(blank=True, null=True)),
                ('religion', models.TextField(blank=True, null=True)),
                ('shop', models.TextField(blank=True, null=True)),
                ('tourism', models.TextField(blank=True, null=True)),
                ('water', models.TextField(blank=True, null=True)),
                ('waterway', models.TextField(blank=True, null=True)),
                ('tags', django.contrib.postgres.fields.hstore.HStoreField(blank=True, null=True)),
                ('way', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=3857)),
                ('valid_since', models.DateField(blank=True, null=True)),
                ('valid_until', models.DateField(blank=True, null=True)),
                ('geoobject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ohdm.OhdmGeoobject')),
            ],
            options={
                'db_table': 'planet_osm_point',
            },
        ),
        migrations.CreateModel(
            name='PlanetOsmLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('osm_id', models.BigIntegerField(blank=True, null=True)),
                ('access', models.TextField(blank=True, null=True)),
                ('addr_housename', models.TextField(blank=True, db_column='addr:housename', null=True)),
                ('addr_housenumber', models.TextField(blank=True, db_column='addr:housenumber', null=True)),
                ('addr_interpolation', models.TextField(blank=True, db_column='addr:interpolation', null=True)),
                ('admin_level', models.TextField(blank=True, null=True)),
                ('aerialway', models.TextField(blank=True, null=True)),
                ('aeroway', models.TextField(blank=True, null=True)),
                ('amenity', models.TextField(blank=True, null=True)),
                ('barrier', models.TextField(blank=True, null=True)),
                ('bicycle', models.TextField(blank=True, null=True)),
                ('bridge', models.TextField(blank=True, null=True)),
                ('boundary', models.TextField(blank=True, null=True)),
                ('building', models.TextField(blank=True, null=True)),
                ('construction', models.TextField(blank=True, null=True)),
                ('covered', models.TextField(blank=True, null=True)),
                ('foot', models.TextField(blank=True, null=True)),
                ('highway', models.TextField(blank=True, null=True)),
                ('historic', models.TextField(blank=True, null=True)),
                ('horse', models.TextField(blank=True, null=True)),
                ('junction', models.TextField(blank=True, null=True)),
                ('landuse', models.TextField(blank=True, null=True)),
                ('layer', models.IntegerField(blank=True, null=True)),
                ('leisure', models.TextField(blank=True, null=True)),
                ('lock', models.TextField(blank=True, null=True)),
                ('man_made', models.TextField(blank=True, null=True)),
                ('military', models.TextField(blank=True, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('natural', models.TextField(blank=True, null=True)),
                ('oneway', models.TextField(blank=True, null=True)),
                ('place', models.TextField(blank=True, null=True)),
                ('power', models.TextField(blank=True, null=True)),
                ('railway', models.TextField(blank=True, null=True)),
                ('ref', models.TextField(blank=True, null=True)),
                ('religion', models.TextField(blank=True, null=True)),
                ('route', models.TextField(blank=True, null=True)),
                ('service', models.TextField(blank=True, null=True)),
                ('shop', models.TextField(blank=True, null=True)),
                ('surface', models.TextField(blank=True, null=True)),
                ('tourism', models.TextField(blank=True, null=True)),
                ('tracktype', models.TextField(blank=True, null=True)),
                ('tunnel', models.TextField(blank=True, null=True)),
                ('water', models.TextField(blank=True, null=True)),
                ('waterway', models.TextField(blank=True, null=True)),
                ('way_area', models.FloatField(blank=True, null=True)),
                ('z_order', models.IntegerField(blank=True, null=True)),
                ('tags', django.contrib.postgres.fields.hstore.HStoreField(blank=True, null=True)),
                ('way', django.contrib.gis.db.models.fields.LineStringField(blank=True, null=True, srid=3857)),
                ('valid_since', models.DateField(blank=True, null=True)),
                ('valid_until', models.DateField(blank=True, null=True)),
                ('geoobject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ohdm.OhdmGeoobject')),
            ],
            options={
                'db_table': 'planet_osm_line',
            },
        ),
    ]
