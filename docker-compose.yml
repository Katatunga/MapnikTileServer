version: '3.4'

services:

  # ssl proxy - let's encrypt
  # https://docs.traefik.io/user-guide/docker-and-lets-encrypt/
  traefik:
    image: traefik
    restart: always
    # command: --help for all traefik commands
    command: >
      --docker.domain=${HOSTNAME}
      --acme.storage=/acme.json
      --acme.email=${ACME_EMAIL}
    ports:
      - 80:80       # HTTP port
      - 443:443     # HTTPS port
      - 8080:8080
    networks:
      - web
      - intern
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./proxy/trefik.toml:/traefik.toml
    container_name: traefik
    labels:
      - "traefik.docker.network=web"

  # adminer -> like phpmyadmin for mariadb
  # https://github.com/TimWolla/docker-adminer
  adminer-db:
    image: adminer
    restart: always
    depends_on:
      - postgis
      - traefik
    command: php -S 0.0.0.0:8080 -t /var/www/html
    networks:
      - web
      - intern
    labels:
      - "traefik.docker.network=web"
      - "traefik.enable=true"
      - "traefik.basic.frontend.rule=Host:db-admin.${HOSTNAME}"
      - "traefik.basic.protocol=http"

  # postgres database with PostGIS
  # https://github.com/kartoza/docker-postgis
  postgis:
    image: kartoza/postgis:9.6-2.4 # Provides PostgreSQL 9.6, PostGIS 2.4
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: always
    networks:
      - intern
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: gis
      POSTGRES_MULTIPLE_EXTENSIONS: postgis,hstore,postgis_topology # You can pass as many extensions as you need.

  # webserver for deploying static website
  webserver:
    image: nginx:latest
    depends_on:
      - traefik
      - tile_server
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./website:/usr/share/nginx/html
    networks:
      - intern
      - web
    labels:
      - "traefik.docker.network=web"
      - "traefik.enable=true"
      - "traefik.basic.frontend.rule=Host:www.${HOSTNAME},${HOSTNAME}"
      - "traefik.basic.protocol=http"

  # Ubuntu 18.04 with mapnik, carto, openstreetmap-carto & flask-mircoservice to serve & render tiles
  # inspired by - https://ircama.github.io/osm-carto-tutorials/tile-server-ubuntu/
  #             - https://github.com/zavpyj/osm-tiles-docker
  #             - https://switch2osm.org/manually-building-a-tile-server-16-04-2-lts/
  tile_server:
    build:
      context: ./tile_server
      args:
        CARTO_VERSION: 0                  # carto version 0.x
        OSM_CARTO_VERSION: v4.21.0        # version of https://github.com/gravitystorm/openstreetmap-carto/releases
    restart: always
    volumes:
      - ./tile_server/app:/app
    depends_on:
      - redis
      - traefik
    networks:
      - intern
    environment:
      # Postgres Enviroment Vars https://www.postgresql.org/docs/current/libpq-envars.html
      PGUSER: ${POSTGRES_USER}
      PGPASSWORD: ${POSTGRES_PASSWORD}
      PGDATABASE: ${POSTGRES_DATABASE}
      PGHOST: ${POSTGRES_HOST}
      ServerName: ${HOSTNAME}
      DEBUG: ${DEBUG}
      CACHE: ${CACHE}
      CAHCE_EXPIRE_TIME: ${CAHCE_EXPIRE_TIME}
      STYLE_PATH: "/opt/openstreetmap-carto/"

  import:
    build:
      context: ./import
      args:
        OSM_IMPORT_CACHE: 40              # osm2pgsql import cache size in MB
        CARTO_VERSION: 0                  # carto version 0.x
    volumes:
      - ./pbf:/opt/pbf
      - ./import/update.sql:/update.sql
    depends_on:
      - postgis
    networks:
      - intern
    environment:
      PGUSER: ${POSTGRES_USER}
      PGPASSWORD: ${POSTGRES_PASSWORD}
      PGDATABASE: ${POSTGRES_DATABASE}
      PGHOST: ${POSTGRES_HOST}

  redis:
    image: "redis:alpine"
    restart: always
    networks:
      - intern

networks:
  web:
    external: true
  intern:
    external: false

volumes:
  pgdata:
